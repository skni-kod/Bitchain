/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/404PageBitcoinv2.glb -t 
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { RefObject, useRef } from 'react';
import { useFrame } from '@react-three/fiber';
import { Group } from 'three';

type GLTFResult = GLTF & {
  nodes: {
    first4: THREE.Mesh
    second4: THREE.Mesh
    Cylinder_1: THREE.Mesh
    Cylinder_2: THREE.Mesh
    Curve: THREE.Mesh
    Curve001: THREE.Mesh
  }
  materials: {
    ['gold main']: THREE.MeshStandardMaterial
    orangeMain: THREE.MeshStandardMaterial
    ['gold img']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Bitcoinv2(props: JSX.IntrinsicElements['group']) {
  const BtcRef: RefObject<Group> = useRef<Group>(null);

	useFrame((state) => {
		if (BtcRef.current) {
			BtcRef.current.rotation.y += Math.cos(state.clock.elapsedTime * 0.5) / 30;
			BtcRef.current.position.y += Math.sin(state.clock.elapsedTime) / 100;
			// BtcRef.current.rotation.z += Math.cos(state.clock.elapsedTime) / 200;
		}
	});
  const { nodes, materials } = useGLTF('./models/404PageBitcoinv2.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.first4.geometry} material={materials['gold main']} position={[-10.586, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[15.355, 10.267, 15.355]} />
      <mesh geometry={nodes.second4.geometry} material={materials['gold main']} position={[12.734, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[15.355, 10.267, 15.355]} />
      <group ref={BtcRef}>
          <group  rotation={[Math.PI / 2, 0, 0]} scale={[5, 0.5, 5]} >
            <mesh geometry={nodes.Cylinder_1.geometry} material={materials['gold main']} />
            <mesh geometry={nodes.Cylinder_2.geometry} material={materials['gold main']} />
          </group>
        <mesh geometry={nodes.Curve.geometry} material={materials['gold img']} position={[0, 0, 0.274]} rotation={[Math.PI / 2, 0, 0]} scale={[58.803, 1, 58.803]} />
        <mesh geometry={nodes.Curve001.geometry} material={materials['gold img']} position={[0, 0, -0.27]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[58.803, 1, 58.803]} />
      </group>
    </group>
  )
}

useGLTF.preload('./models/404PageBitcoinv2.glb')
